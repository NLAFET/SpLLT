extern "C" %{

#include "dague.h"
#include "dague_internal.h"
   //#include "data_dist/matrix/two_dim_rectangle_cyclic.h"
#include "data_dist/matrix/matrix.h"
#include "data_dist/matrix/two_dim_tabular.h"
#include "factorize.h"
#include "spllt_parsec_data.h"

%}

num_nodes       [type = int]
data            [type = "struct spllt_parsec_data*"]

init_node(snode)

   snode = 1..num_nodes

   : data(snode)
   
BODY
{
   printf("[init_node] snode: %d\n", snode);
}
END

extern "C" %{
   
   dague_handle_t* spllt_parsec_factorize(int num_nodes) {
      
      dague_factorize_handle_t* fac_hdl;
      
      spllt_parsec_data_t *data = spllt_parsec_data_create(num_nodes); 

      fac_hdl = dague_factorize_new(num_nodes, data);

      assert( NULL != fac_hdl );

      return &fac_hdl->super;    
   }

%}
